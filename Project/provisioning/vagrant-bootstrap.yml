---

# ====================================================================================================================================

- name: BOOTSTRAPPING
  hosts: all
  
  vars:
    - ansible_deployer: "{{ lookup('env','ANSIBLE_DEPLOYER') }}"
    - artifacts: "{{ lookup('env','ARTIFACTS') }}"

# ------------------------------------------------------------------------------------------------------------------------------------

  become: yes
  become_user: root
  
# ====================================================================================================================================

  tasks:

# ------------------------------------------------------------------------------------------------------------------------------------

    - name: Disable SELinux
      selinux:
        state: disabled
 
 # ------------------------------------------------------------------------------------------------------------------------------------

    - name: Set Timezone
      timezone:
        name: Asia/Yerevan

# ------------------------------------------------------------------------------------------------------------------------------------

    - name: Set Authorized Key (root)
      authorized_key:
        user: root
        key: "{{ item }}"
        state: present
        exclusive: yes
      with_file:
        - "{{ artifacts }}/home/{{ ansible_deployer }}/.ssh/id_rsa_{{ ansible_deployer }}.pub"

    - name: Configure User
      user:
        name: "{{ ansible_deployer }}"
        shell: /bin/bash
        groups: wheel,docker
        append: yes

    - name: Set Authorized Key (user)
      authorized_key:
        user: "{{ ansible_deployer }}"
        key: "{{ item }}"
        state: present
        exclusive: yes
      with_file:
        - "{{ artifacts }}/home/{{ ansible_deployer }}/.ssh/id_rsa_{{ ansible_deployer }}.pub"

# ------------------------------------------------------------------------------------------------------------------------------------

    - name: Configure Bashrc (root)
      vars:
        - color: "31"
      template:
        src: "./templates/bashrc.j2"
        dest: "~/.bashrc"
        mode: 0644

    - name: Configure Bashrc (user)
      become: yes
      become_user: "{{ ansible_deployer }}"
      vars:
        - color: "33"
      template:
        src: "./templates/bashrc.j2"
        dest: "~/.bashrc"
        mode: 0644

# ------------------------------------------------------------------------------------------------------------------------------------

    - name: Set Sudoers 
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: "^%wheel"
        line: "%wheel ALL=(ALL) NOPASSWD: ALL"
        validate: "visudo -cf %s"

# ------------------------------------------------------------------------------------------------------------------------------------

    - name: Install Packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - epel-release
        - yum-utils
        - vim
        - wget
        - figlet
        - rsync

# ------------------------------------------------------------------------------------------------------------------------------------

    - name: Enable Services
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - chronyd
        - docker
      ignore_errors: yes

    - name: Disable Services
      service: "name={{ item }} state=stopped enabled=no"
      with_items:
        - firewalld
        - rpcbind
        - postfix
        - systemd-resolved
      ignore_errors: yes

    - name: Mask Services
      service: "name={{ item }} masked=yes"
      with_items:
        - firewalld
        - rpcbind
        - selinux-autorelabel-mark
      ignore_errors: yes

# ------------------------------------------------------------------------------------------------------------------------------------

    - name: Configure SSHd
      template:
        src: "./templates/sshd_config.CentOS8.j2"
        dest: "/etc/ssh/sshd_config"
        owner: root
        group: root
        mode: 0600
      register: sshd_config

    - name: Restart SSHd
      service: name=sshd state=restarted
      when: sshd_config.changed

# ------------------------------------------------------------------------------------------------------------------------------------

    - name: Make SSH Insecure
      copy:
        src: "./files/07-insecure.conf"
        dest: "/etc/ssh/ssh_config.d/"
        mode: 0644

# ------------------------------------------------------------------------------------------------------------------------------------

    - name: Grub Defaults
      copy:
        src: "./files/grub"
        dest: "/etc/default/"
        owner: root
        group: root
        mode: 0644
      register: grub

    - name: Grub Config (Needs Reboot!)
      shell: /usr/sbin/grub2-mkconfig -o /boot/grub2/grub.cfg
      when: grub.changed

# ------------------------------------------------------------------------------------------------------------------------------------

    # - name: Update System
    #   yum:
    #     name: "*"
    #     state: latest
    #     # update_cache: yes

    # - name: Update System (Needs Reboot!)
    #   shell: |
    #     needs-restarting -r
    #   failed_when: false
    #   register: update
    #   changed_when: update.stdout is search("Reboot is required")

# ====================================================================================================================================

    # - name: Reboot System
    #   reboot:
    #     reboot_timeout: 3600
    #     msg: "Rebooting System..."
    #   when: update.changed or grub.changed

# ====================================================================================================================================


